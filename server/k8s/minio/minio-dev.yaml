# Deploys a new Namespace for the MinIO Pod
apiVersion: v1
kind: Namespace
metadata:
  name: minio-dev # Change this value if you want a different namespace name
  labels:
    name: minio-dev # Change this value to match metadata.name
---
# Secret: contains custom MinIO access and secret keys
apiVersion: v1
kind: Secret
metadata:
  name: minio-creds
  namespace: minio-dev
stringData:
  MINIO_ACCESS_KEY: "prakash-banjade"
  MINIO_SECRET_KEY: "prakash-banjade-secret"
type: Opaque
---
# Deploys a new MinIO Pod into the metadata.namespace Kubernetes namespace
#
# The `spec.containers[0].args` contains the command run on the pod
# The `/data` directory corresponds to the `spec.containers[0].volumeMounts[0].mountPath`
# That mount path corresponds to a Kubernetes HostPath which binds `/data` to a local drive or volume on the worker node where the pod runs
#
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: minio
  name: minio
  namespace: minio-dev # Change this value to match the namespace metadata.name
spec:
  containers:
    - name: minio
      image: quay.io/minio/minio:latest
      command:
        - /bin/bash
        - -c
      args:
        - minio server /data --console-address :9090
      env:
        - name: MINIO_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: minio-creds
              key: MINIO_ACCESS_KEY
        - name: MINIO_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: minio-creds
              key: MINIO_SECRET_KEY
      volumeMounts:
        - mountPath: /data
          name: localvolume # Corresponds to the `spec.volumes` Persistent Volume
  nodeSelector:
    kubernetes.io/hostname: prakash-cluster-worker # Specify a node label associated to the Worker Node on which you want to deploy the pod.
  volumes:
    - name: localvolume
      hostPath: # MinIO generally recommends using locally-attached volumes
        path: /mnt/disk1/data # Specify a path to a local drive or volume on the Kubernetes worker node
        type: DirectoryOrCreate # The path to the last directory must exist
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: minio-dev      
spec:
  selector:
    app: minio               # must match your MinIO Podâ€™s labels
  ports:
    - name: api
      port: 9000           
      targetPort: 9000       
      protocol: TCP
    - name: console
      port: 9090           
      targetPort: 9090
      protocol: TCP
